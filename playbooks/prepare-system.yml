---
- name: Prepare system
  hosts: k3s_rpi
  gather_facts: no
  become: yes
  become_method: su
  pre_tasks:

    - name: Initialize pacman keyring
      raw: pacman-key --init

    - name: Initial setup of master keys
      raw: pacman-key --populate archlinuxarm

    - name: Install python if not there
      raw: |
        test -e /usr/bin/python || \
        (pacman -Sy --noconfirm python python-simplejson)
      register: output
      changed_when: output.stdout|trim() != ""

    - name: Config pacman 'ParallelDownloads'
      lineinfile:
        path: /etc/pacman.conf
        regexp: '^#ParallelDownloads'
        line: 'ParallelDownloads = 5'

    - name: Config pacman 'Color'
      lineinfile:
        path: /etc/pacman.conf
        regexp: '^#Color'
        line: 'Color'

  tasks:
    - name: Update and upgrade pacman packages
      pacman:
        update_cache: yes
        upgrade: yes
      register: packages_updated

    - name: Install common packages
      pacman:
        name:
          - avahi
          - base-devel
          - crictl
          - dialog
          - docker
          - git
          - go
          - htop
          - nss-mdns
          - python
          - python-pip
          - python-simplejson
          - sudo
          - uboot-tools
          - wget
        state: present

    - name: Generate locale {{ locale }}
      locale_gen:
        name: "{{ locale }}"
        state: present

    - name: Set system locale to {{ locale }}
      copy:
        dest: /etc/locale.conf
        content: |
          LANG={{ locale }}

    - name: Set timezone to {{ timezone }}
      timezone:
        name: "{{ timezone }}"

    - name: Check NTP time synchronization
      shell:
        cmd: "timedatectl status | grep -i 'NTP service: inactive'"
      register: ntp_disabled
      changed_when: False
      failed_when: ntp_disabled.rc >=2
      ignore_errors: yes

    - name: Enable NTP time synchronization
      command: timedatectl set-ntp true
      when: ntp_disabled.stdout is search("inactive")

    - name: Create AUR builder user
      user:
        name: aur_builder
        group: "{{ def_group }}"

    - name: Add sudoers permissions to AUR builder
      lineinfile:
        path: /etc/sudoers.d/11-install-aur_builder
        line: "aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman"
        create: yes
        validate: "visudo -cf %s"

    - name: Fix sudo issues
      lineinfile:
        path: /etc/sudoers
        regexp: '^# %wheel ALL=(ALL) NOPASSWD: ALL$'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: "visudo -cf %s"

    - name: Silence kernel messages
      copy:
        dest: /etc/sysctl.d/20-quiet-printk.conf
        content: |
          kernel.printk = 3 3 3 3

    - name: Set GPIO rules
      copy:
        src: rules/99-gpio.rules
        dest: /etc/udev/rules.d

    - name: Set I2C rules
      copy:
        src: rules/45-i2c.rules
        dest: /etc/udev/rules.d

    - name: Rebooting
      reboot:
      when: packages_updated is changed
