---
- name: Add kubectl bash completions
  shell:
    cmd: k3s kubectl completion bash > /usr/share/bash-completion/completions/kubectl
    creates: /usr/share/bash-completion/completions/kubectl

- name: Ensures kube config directory exists
  file:
    path: ~{{ rpi_username }}/.kube
    state: directory

- name: Copy config file to user home directory
  copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: ~{{ rpi_username }}/.kube/config
    remote_src: yes
    mode: preserve
    owner: "{{ rpi_username }}"

- name: Copy config file to host
  fetch:
    src: /etc/rancher/k3s/k3s.yaml
    dest: ~{{ rpi_username }}/.kube/config
    flat: yes

- name : Change ownership of Kube directory
  file:
    path: ~{{ rpi_username }}/.kube
    owner: "{{ rpi_username }}"
    group: "{{ dev_group }}"
    recurse: yes

- name: Configure crictl endpoints
  copy:
    dest: /etc/crictl.yaml
    content: |
      runtime-endpoint: unix:///run/k3s/containerd/containerd.sock
      image-endpoint: unix:///run/k3s/containerd/containerd.sock

- name: Wait for worker nodes to come up
  become: yes
  become_user: "{{ rpi_username }}"
  shell:
    cmd: |
      set -o pipefail
      export KUBECONFIG=~/.kube/config
      k3s kubectl get nodes | grep {{ item }} | grep -i Ready | grep -iv NotReady | awk '{ print $1 }'
  args:
    executable: /bin/bash
  register: node_ready
  until: node_ready.rc == 0
  changed_when: node_ready.rc == 0
  failed_when: False
  retries: 6
  delay: 10
  with_items:  "{{ groups['k3s_rpi_workers'] }}"

- name: Set label on worker nodes
  become: yes
  become_user: "{{ rpi_username }}"
  shell:
    cmd: |
      set -o pipefail
      export KUBECONFIG=~/.kube/config
      k3s kubectl label node {{ item }} node-role.kubernetes.io/worker=worker --overwrite
  args:
    executable: /bin/bash
  loop: "{{ groups['k3s_rpi_workers'] }}"
  loop_control:
    index_var: node_idx
  when: item == node_ready.results[node_idx].stdout
  changed_when: item == node_ready.results[node_idx].stdout
